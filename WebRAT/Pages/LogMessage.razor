@page "/log"
@using Newtonsoft.Json.Linq

<h3>Log Messages</h3>

<div class="log-container">
    @if (logEntries != null && logEntries.Any())
    {
        <div class="log-entry" style="margin-bottom: 20px;">
            @foreach (var log in logEntries)
            {
                <div style="color: @(log.Value<string>("HexColor"));">
                    <strong>@(log.Value<string>("Timestamp")):</strong> @(log.Value<string>("Message"))
                </div>
            }
        </div>

        <div class="pagination">
            <button class="btn btn-primary" @onclick="PrevPage" disabled="@(!canPrev)">Previous</button>
            <span>Page @currentPage of @totalPages</span>
            <button class="btn btn-primary" @onclick="NextPage" disabled="@(!canNext)">Next</button>
        </div>
    }
    else
    {
        <p>No logs available.</p>
    }
</div>

@code {
    private List<JObject> logEntries;
    private int currentPage = 1;
    private int totalPages;
    private bool canPrev => currentPage > 1;
    private bool canNext => currentPage < totalPages;

    protected override void OnInitialized()
    {
        LoadLogs();
    }

    private void LoadLogs()
    {
        var logJson = Log.GetLogs(currentPage);
        var logData = JObject.Parse(logJson);

        currentPage = logData.Value<int>("当前页");
        totalPages = logData.Value<int>("全部页面");
        logEntries = logData["log"].ToObject<List<JObject>>();
    }

    private void PrevPage()
    {
        if (canPrev)
        {
            currentPage--;
            LoadLogs();
        }
    }

    private void NextPage()
    {
        if (canNext)
        {
            currentPage++;
            LoadLogs();
        }
    }
}
